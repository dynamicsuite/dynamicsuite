#!/usr/bin/env php
<?php
/*
 * Dynamic Suite
 * Copyright (C) 2020 Dynamic Suite Team
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation version 3.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
 */

namespace DynamicSuite;
use DynamicSuite\Core\DynamicSuite;
use DynamicSuite\Package\Packages;
use DynamicSuite\Util\CLI;
use PDO;

set_time_limit(0);
ini_set('memory_limit', -1);

// Create environment
require_once __DIR__ . '/create_instance.php';

// Connect to the database
DynamicSuite::$db->connect();

// Dump information
CLI::out('-- Environment');
CLI::out('  Server OS: ' . php_uname());
CLI::out('    PHP Ver: ' . phpversion());
CLI::out('   Root Dir: ' . DS_ROOT_DIR);
CLI::out('-- Instance');
CLI::out(' DS Version: ' . DS_VERSION);
CLI::out('       Time: ' . date('Y-m-d H:i:s'));
CLI::out('       APCU: ' . (DS_CACHING ? 'YES' : 'NO'));
CLI::out('-- Database');
CLI::out('        DSN: ' . DynamicSuite::$cfg->db_dsn);
CLI::out('       User: ' . DynamicSuite::$cfg->db_user);
CLI::out(' Client Ver: ' . DynamicSuite::$db->conn->getAttribute(PDO::ATTR_CLIENT_VERSION));
CLI::out(' Server Ver: ' . DynamicSuite::$db->conn->getAttribute(PDO::ATTR_SERVER_VERSION));
CLI::out('     Driver: ' . DynamicSuite::$db->conn->getAttribute(PDO::ATTR_DRIVER_NAME));
CLI::out('-- Packages');
if (empty(Packages::$loaded)) {
    CLI::out('  No packages loaded');
}
foreach (Packages::$loaded as $package) {
    CLI::out("  $package->package_id");
    CLI::out("    Name:        $package->name");
    CLI::out("    Author:      $package->author");
    CLI::out("    Version:     $package->version");
    CLI::out("    Description: $package->description");
    CLI::out("    License:     $package->license");
}