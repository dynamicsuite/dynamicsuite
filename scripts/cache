#!/usr/bin/env php
<?php
/*
 * Dynamic Suite
 * Copyright (C) 2020 Dynamic Suite Team
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation version 3.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
 */

namespace DynamicSuite;
use DynamicSuite\Util\CLI;

set_time_limit(0);
ini_set('memory_limit', -1);

/** @noinspection ALL */
require_once realpath(__DIR__ . '/create_environment.php');

// Print command usage
function printUsage(): void
{
    CLI::out('Usage: ./cache [-fh] [options ...]');
    CLI::out('Options:');
    CLI::out('  -f         Force "YES" at all prompts');
    CLI::out('  -h, --help Display this help');
    CLI::out('  --enable   Enable the cache');
    CLI::out('  --disable  Disable the cache');
}

// Set the caching state
function setState(bool $state): void
{
    global $argv;
    $script = file_get_contents(realpath(__DIR__ . '/create_environment.php'));
    $state = $state ? 'true' : 'false';
    $replace = DS_CACHING
        ? "define('DS_CACHING', true);"
        : "define('DS_CACHING', false);";
    $script = str_replace($replace, "define('DS_CACHING', $state);", $script);
    file_put_contents(realpath(__DIR__ . '/create_environment.php'), $script);
    CLI::out('Caching state changed');
    if (isset($argv[1]) && $argv[1] === '-f') {
        if ($err = exec('apachectl restart')) {
            CLI::err($err);
        }
    } elseif (CLI::yn('Reset cache now (restart apache)?')) {
        if ($err = exec('apachectl restart')) {
            CLI::err($err);
        }
    }
}

$options = getopt('h', ['help', 'enable', 'disable']);

// Show help
if (CLI::actionIs(['h', 'help'], $options)) {
    printUsage();
}

// Enable caching
elseif (CLI::actionIs('enable', $options)) {
    setState(true);
}

// Disable caching
elseif (CLI::actionIs('disable', $options)) {
    setState(false);
}

// Invalid usage
else {
    CLI::out('Caching ' . (DS_CACHING ? 'enabled' : 'disabled'));
}