Vue.component("ds-overlay",{template:'<div class="ds-overlay"><div :class="nav_button_classes" @click="toggleNav"><i class="fas fa-bars"></i></div><h1 class="title">{{overlay_title}}</h1><div v-if="overlay_actions.length" :class="actions_button_classes" @click="toggleActions"><i :class="overlay_actions_icon"></i></div><div v-if="overlay_actions.length && show_actions" class="actions"><component v-for="(name, key) in overlay_actions" :is="name" :key="\'action\' + key"></component></div><div v-if="show_nav" class="nav"><div class="links"><div v-for="(superlink, super_id) in overlay_nav_tree" :key="superlink.key" class="link-group"><span :class="superlinkClasses(superlink)" @click="superlinkInteraction(superlink)"><i :class="navIconClass(superlink.icon, superlink.path)"></i> <span>{{superlink.name}}</span> <span class="alerts"><span v-if="getAlert(super_id, \'failure\')" class="failure">{{getAlert(super_id, \'failure\')}}</span> <span v-if="getAlert(super_id, \'warning\')" class="warning">{{getAlert(super_id, \'warning\')}}</span> <span v-if="getAlert(super_id, \'success\')" class="success">{{getAlert(super_id, \'success\')}}</span> </span><i v-if="superlink.nav_group" :class="chevronClasses(superlink.nav_group)"></i></span><div v-if="superlink.nav_group === selected_group" class="sublinks"><span v-for="(sublink, sub_id) in superlink.views" :key="sublink.key" :class="sublinkClasses(sublink)" @click="goto(sublink.path)"><i :class="navIconClass(sublink.icon, sublink.path)"></i> <span>{{sublink.name}}</span> <span class="alerts"><span v-if="getAlert(sub_id, \'failure\')" class="failure">{{getAlert(sub_id, \'failure\')}}</span> <span v-if="getAlert(sub_id, \'warning\')" class="warning">{{getAlert(sub_id, \'warning\')}}</span> <span v-if="getAlert(sub_id, \'success\')" class="success">{{getAlert(sub_id, \'success\')}}</span></span></span></div></div></div><footer v-if="overlay_nav_footer_text" @click="goto(overlay_nav_footer_view)">{{overlay_nav_footer_text}}</footer></div></div>',props:{default_view:{type:null|String,default:null},overlay_nav_tree:{type:Array|Object,default:()=>[]},overlay_nav_footer_text:{type:null|String,default:null},overlay_nav_footer_view:{type:null|String,default:null},overlay_nav_alert_success:{type:Object|Array,default:()=>{}},overlay_nav_alert_warning:{type:Object|Array,default:()=>{}},overlay_nav_alert_failure:{type:Object|Array,default:()=>{}},overlay_title:{type:null|String,default:null},overlay_actions_icon:{type:null|String,default:null},overlay_actions:{type:Array,default:()=>[]}},data:()=>({show_nav:!1,show_actions:!1,selected_group:null,pending_path:null,loading:!1}),computed:{nav_button_classes(){return{button:!0,interactive:!0,active:this.show_nav}},actions_button_classes(){return{button:!0,interactive:!0,active:this.show_actions}}},methods:{goto(e){e&&(this.pending_path=e,setTimeout(()=>{this.loading=!0},100),document.location=e)},toggleNav(){this.pending_path||(this.show_actions=!1,this.show_nav=!this.show_nav)},toggleActions(){this.pending_path||(this.show_nav=!1,this.show_actions=!this.show_actions)},chevronClasses(e){return{fas:!0,"fa-chevron-right":e!==this.selected_group,"fa-chevron-down":e===this.selected_group}},superlinkClasses(e){return{superlink:!0,active:e.active,selected:null!==e.nav_group&&this.selected_group===e.nav_group}},superlinkInteraction(e){e.hasOwnProperty("path")?this.goto(e.path):this.selected_group===e.nav_group?this.selected_group=null:this.selected_group=e.nav_group},sublinkClasses:e=>({sublink:!0,active:e.active}),navIconClass(e,s){return this.loading&&s===this.pending_path?"fas fa-circle-notch fa-spin":e},getAlert(e,s){const t=`overlay_nav_alert_${s}`;return!("object"!=typeof this[t]||!this[t].hasOwnProperty(e))&&this[t][e]}},mounted(){const e=window.location.pathname.split("?")[0].split("#")[0],s="/"===e?this.default_view:e;for(const e in this.overlay_nav_tree)if(this.overlay_nav_tree[e].hasOwnProperty("path")&&this.overlay_nav_tree[e].path.startsWith("/"))this.overlay_nav_tree[e].active=this.overlay_nav_tree[e].path===s;else for(const t in this.overlay_nav_tree[e].views)this.overlay_nav_tree[e].views[t].path===s&&(this.overlay_nav_tree[e].active=!0,this.overlay_nav_tree[e].views[t].active=!0,this.selected_group=this.overlay_nav_tree[e].nav_group);document.getElementById("ds-content").addEventListener("click",()=>{this.pending_path||(this.show_nav=!1,this.show_actions=!1)})}});Vue.component("ds-range",{template:'<div class="ds-range"><div class="bar"></div><div class="filler" ref="filler"></div><input type="range" ref="slider1" @mousemove="moveHandler" @input="handleChange" v-model="start"> <input type="range" ref="slider2" @mousemove="moveHandler" @input="handleChange" v-model="end"></div>',props:{min:Number,max:Number},data:()=>({start:0,end:0}),methods:{handleChange(){this.$emit("update:min",Math.min(this.start,this.end)),this.$emit("update:max",Math.max(this.start,this.end))},moveHandler(e){let t=100*e.clientX/160,s=Math.abs(this.start-t),a=Math.abs(this.end-t);e.buttons||(s<a?(this.$refs.slider1.style.zIndex="2",this.$refs.slider2.style.zIndex="1"):(this.$refs.slider2.style.zIndex="2",this.$refs.slider1.style.zIndex="1"))}}});Vue.component("ds-wrapper",{template:'<div><label>min: {{min}} | max: {{max}}</label><ds-range :min.sync="min" :max.sync="max"></ds-range></div>',data:()=>({min:0,max:0})});class DynamicSuite{static call(e,a,t){fetch(`/dynamicsuite/api/${e}`,{method:"POST",body:JSON.stringify(a||[])}).then(e=>{if(e.ok)return e;throw new Error("A server error has occurred")}).then(e=>e.json()).then(e=>t(e),()=>t({status:"SERVER_ERROR",message:"A malformed response was returned",data:null})).catch(e=>{console.log(e),t({status:"SERVER_ERROR",message:"A malformed response was returned",data:null})})}}DynamicSuite.vm=new Vue({name:"DynamicSuite",el:"#dynamicsuite",data:()=>({has_session:!1,hide_overlay:!0,default_view:null,overlay_nav_tree:[],overlay_nav_footer_text:null,overlay_nav_footer_view:null,overlay_nav_alert_success:{},overlay_nav_alert_warning:{},overlay_nav_alert_failure:{},overlay_title:null,overlay_actions_icon:null,overlay_actions:[]}),methods:{setNavAlert(e,a,t){const n=`overlay_nav_alert_${e}`;this.$set(this[n],a,t)}},mounted(){for(const e of Object.keys(this._data))window.dynamicsuite.hasOwnProperty(e)&&(this[e]=window.dynamicsuite[e]);document.getElementById("dynamicsuite").style.display="flex"}});